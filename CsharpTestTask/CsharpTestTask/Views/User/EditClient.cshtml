@model CsharpTestTask.Models.Сlient

@{
    ViewBag.Title = "EditClient";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
  <script src="//code.jquery.com/jquery-1.10.2.js"></script>
  <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
  <link rel="stylesheet" href="/resources/demos/style.css">
<h2>EditClient</h2>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()
    <fieldset>
        <legend>UserDto</legend>

       @if (ViewBag.SuccesMessage != null)
       {
           <div style="font: 15px bold; color:green;">
               @ViewBag.SuccesMessage
           </div>
       }

         @if (ViewBag.ErrorMessage != null)
         {
           <div style="font: 15px bold; color:red;">
               @ViewBag.ErrorMessage
           </div>
         }

        @Html.HiddenFor(model => model.Id)

        

         <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Phone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Phone)
            @Html.ValidationMessageFor(model => model.Phone)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.AdressWebSite)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AdressWebSite)
            @Html.ValidationMessageFor(model => model.AdressWebSite)
        </div>

        
        <div class="editor-label">
            @Html.LabelFor(model => model.ContactPersonId)
        </div>
        <div class="editor-field">
           @Html.DropDownListFor(model => model.ContactPersonId,
                  CsharpTestTask.Controllers.DbHelper.PostgreSQLDbRepository.getInstance().getNameContactFace(Model.ContactPersonId),
                  new { @class = "myselect" })
        </div>

        <div class="editor-label" style="margin-bottom:10px;">
            @Html.LabelFor(model => model.DealState)
        </div>

        @{
         List<SelectListItem> list = new List<SelectListItem> { 
                       new SelectListItem { Value = "0" , Text = "First Contact" },
                       new SelectListItem { Value = "1" , Text = "Conversation" },
                       new SelectListItem { Value = "2" , Text = "Harmonization Of Contract" },
                       new SelectListItem { Value = "3" , Text = "Cooperation" }
                    };

         list = CsharpTestTask.Helper.FakeCreator.generateDealState(Model.DealState);
        }

        @Html.DropDownListFor(model => model.DealState,
                list,
                  new { @class = "myselect" })
       

        <div class="editor-label" style="margin-top:10px;">
            @Html.LabelFor(model => model.DateOfLastCall)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateOfLastCall)
            @Html.ValidationMessageFor(model => model.DateOfLastCall)
        </div>

        <div style="display:none">
        <div class="editor-label" style="margin-top:10px;">
            @Html.LabelFor(model => model.DateCreate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateCreate)
            @Html.ValidationMessageFor(model => model.DateCreate)
        </div>
            </div>


        <p>
            <input type="submit" value="Update" />
        </p>

        <div>
   @Html.ActionLink("Delete this client", "DeleteClient", new { id = Model.Id })
</div>
    </fieldset>
}


<script>
  $(function() {
      $("#DateOfLastCall").datepicker();
  });
  </script>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
