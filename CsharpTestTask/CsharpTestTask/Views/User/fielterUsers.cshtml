@model PagedList.IPagedList<CsharpTestTask.Models.UserDto>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "fielter Users";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}

<!--<h2>getUsers</h2> -->

@{
    List<SelectListItem> list = new List<SelectListItem> { 
                       new SelectListItem { Value = "0" , Text = "First Contact" },
                       new SelectListItem { Value = "1" , Text = "Conversation" },
                       new SelectListItem { Value = "2" , Text = "Harmonization Of Contract" },
                       new SelectListItem { Value = "3" , Text = "Cooperation" }
                    };

    //list = CsharpTestTask.Helper.FakeCreator.generateDealState(Model.DealState);
        }

<p>
    @using (Html.BeginForm("fielterUsers", "User", FormMethod.Get))
    {
        <span>Deal State</span> @Html.DropDownList("dealState", list);
        <input type="submit" value="fielter" />
    }
</p>

<p>
    @Html.ActionLink("Create new client", "RegisterClient", null, new { @class="href_sort" })
     @Html.ActionLink("Create new contact person", "RegisterContactPerson", null, new { @class="href_sort" })
</p>

<p>
    @Html.ActionLink("Display clients", "getClients", null, new { @class="href_sort" })
     @Html.ActionLink("Display contact person", "getContactPersons", null, new { @class="href_sort" })
</p>
<table class="table table-striped">
    <tr>
       <th>
           
            @Html.ActionLink("Client name", "sortUsers",  new { sortType = CsharpTestTask.Models.Enums.SortType.ClientName  },new { @class="href_sort" })
        </th>
        <th>
            Client phone
        </th>
        <th>
            Clients web site
        </th>
        <th>
           
            @Html.ActionLink("Date of last call", "sortUsers",  new { sortType = CsharpTestTask.Models.Enums.SortType.DateOfLastCall  },new { @class="href_sort" })
        </th>
        <th>
           Date of created client
        </th>
        <th>
           Deal state
        </th>
        <th>
            Surname of contact person
        </th>
        <th>
           Name of contact person
        </th>
        <th>
           Patronymic of contact person
        </th>
        <th>
            Work phone of contact person
        </th>
        <th>
            Mobile phone of contact person
        </th>
        <th>
           Email of contact person
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ClientName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ClientPhone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ClientAdressWebSite)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ClientDateOfLastCall)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ClientDateCreate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ClientDealState)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ContactPersonSurname)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ContactPersonName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ContactPersonPatronymic)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ContactPersonWorkPhone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ContactPersonMobilePhone)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ContactPersonEmail)
        </td>
        <td>
            @Html.ActionLink("Edit client", "EditClient", new { id=item.ClientId }) |
            @Html.ActionLink("Edit contact person", "EditContactPerson", new { id=item.ContactPersonId }) 
        </td>
    </tr>
}

</table>

Страница @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) из @Model.PageCount
 
@Html.PagedListPager(Model, page => Url.Action("fielterUsers",  new { page }))
